<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hugcode.managementsystem.mapper.StudentMapper">
    <insert id="addStudentList">
        insert into student (sid, sname, ssex, sage)
        values
        <foreach collection="list" item="student" separator=",">
            (#{student.sid}, #{student.sname}, #{student.ssex}, #{student.sage})
        </foreach>
    </insert>

    <insert id="addStudent">
        insert into student (sid, sname, ssex, sage)
        values (#{sid}, #{sname}, #{ssex}, #{sage})

    </insert>

    <update id="updateStudent">
        update student
        <set>
            sid=#{sid},
            <if test="sname != null and sname != ''">
                sname=#{sname},
            </if>
            <if test="ssex != null and ssex != ''">
                ssex=#{ssex},
            </if>
            <if test="sage != null and sage != ''">
                sage=#{sage},
            </if>
            <if test="password != null and password != ''">
                password=#{password}
            </if>
        </set>
        where sid = #{sid}
    </update>

    <delete id="deleteStudentList" parameterType="java.util.List">
        delete
        from student where sid in
        <foreach collection="list" item="student" open="(" separator="," close=")">
            #{student.sid}
        </foreach>
    </delete>

    <select id="selectAll" resultMap="courseResultMap">
        SELECT student.*, course.*, student_course.grade, teacher.tname
        FROM student
                 LEFT JOIN student_course ON student.sid = student_course.sid
                 LEFT JOIN course ON student_course.cid = course.cid
                 LEFT JOIN teacher ON teacher.tid = course.tid;
    </select>
    <sql id="credits">
        SELECT student_course.sid,
               sum(course.ccredit) as totalCredits,
               sum(case when student_course.grade >= 60 then course.ccredit else 0 end) as completedCredits
        FROM student_course
                 JOIN course on student_course.cid = course.cid
        GROUP BY student_course.sid
    </sql>
    <select id="selectByCondition" resultMap="courseResultMap">
        SELECT student.*, course.*, student_course.grade, teacher.tname,teacher.tid,
        creditResults.totalCredits, creditResults.completedCredits
        FROM student
        LEFT JOIN student_course ON student.sid = student_course.sid
        LEFT JOIN course ON student_course.cid = course.cid
        LEFT JOIN teacher ON teacher.tid = course.tid
        LEFT JOIN (
        <include refid="credits"/>
        ) creditResults ON student.sid = creditResults.sid
        <where>
            <if test="sid != null and sid != ''">
                student.sid = #{sid}
            </if>
            <if test="sname != null and sname != ''">
                AND student.sname = #{sname}
            </if>
            <if test="ssex != null and ssex != ''">
                AND student.ssex = #{ssex}
            </if>
            <if test="sage != null and sage != ''">
                AND student.sage = #{sage}
            </if>
            <if test="totalCredits != null">
                AND creditResults.totalCredits = #{totalCredits}
            </if>
            <if test="completedCredits != null">
                AND creditResults.completedCredits = #{completedCredits}
            </if>
        </where>
    </select>


    <select id="selectBySid" resultType="Student">
        select *
        from student
        where sid = #{sid}
    </select>

    <resultMap id="courseResultMap" type="Student">
        <id property="sid" column="sid"/>
        <result property="sname" column="sname"/>
        <result property="ssex" column="ssex"/>
        <result property="sage" column="sage"/>
        <result property="password" column="password"/>
        <result property="totalCredits" column="totalCredits"/>
        <result property="completedCredits" column="completedCredits"/>
        <collection property="courses" ofType="StudentCourse">
            <id property="cid" column="cid"/>
            <result property="cname" column="cname"/>
            <result property="ccredit" column="ccredit"/>
            <result property="grade" column="grade"/>
            <result property="tname" column="tname"/>
        </collection>
    </resultMap>

    <select id="findCourseBySid" resultMap="courseResultMap">
        select student.*, course.*, student_course.grade, teacher.tname
        from student,
             course,
             student_course,
             teacher
        where student_course.sid = #{sid}
          AND student.sid = student_course.sid
          AND student_course.cid = course.cid
          AND teacher.tid = course.tid
    </select>

    <update id="updateCourseGrade">
        <!-- TODO 更新学生的成绩  -->
    </update>

    <update id="updatePassword">
        update student
        set password = #{password}
        where sid = #{sid}
    </update>

    <delete id="deleteBySid">
            delete from student_course where sid=#{sid};
            delete from student where sid = #{sid};
    </delete>

    <delete id="deleteBySidList">
        delete from student_course where sid in
        <foreach collection="list" item="sid" open="(" separator="," close=")">
            #{sid}
        </foreach>;
        delete
        from student
        where sid in
        <foreach collection="list" item="sid" open="(" separator="," close=")">
            #{sid}
        </foreach>
    </delete>

    <select id="login" resultType="java.lang.Integer">
        select count(*)
        from student
        where sid = #{sid}
          and password = #{password}
    </select>

    <update id="resetPassword">
        update student
        set password = #{password}
        where sid = #{sid}
    </update>
</mapper>